{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\n\nfunction BoardComponent_div_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 5);\n  }\n\n  if (rf & 2) {\n    const squareNumber_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r2.isWhite(squareNumber_r1) ? \"mark white\" : \"mark black\");\n  }\n}\n\nfunction BoardComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtemplate(1, BoardComponent_div_2_div_1_Template, 1, 1, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const squareNumber_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.squareContainsMark(squareNumber_r1));\n  }\n}\n\nvar Color = /*#__PURE__*/(() => {\n  (function (Color) {\n    Color[Color[\"Black\"] = 0] = \"Black\";\n    Color[Color[\"White\"] = 1] = \"White\";\n  })(Color || (Color = {}));\n\n  return Color;\n})();\nlet markAttachedToCursor;\nlet referenceMarkOnBoard;\nexport let BoardComponent = /*#__PURE__*/(() => {\n  class BoardComponent {\n    constructor() {\n      this.squareNumbers = [...Array(64).keys()];\n      this.marks = [{\n        SquareNumber: 10,\n        Color: Color.Black\n      }, {\n        SquareNumber: 15,\n        Color: Color.White\n      }, {\n        SquareNumber: 11,\n        Color: Color.Black\n      }, {\n        SquareNumber: 16,\n        Color: Color.White\n      }];\n    }\n\n    ngOnInit() {\n      window.addEventListener('mousemove', e => this.moveMarkToCursor(e.clientX, e.clientY));\n      window.addEventListener('resize', () => this.resizeCursorMark());\n      const board = document.getElementsByClassName('board')[0];\n      console.log(board);\n      board.addEventListener('mouseenter', () => this.cursorEnterBoard());\n      board.addEventListener('mouseleave', () => this.cursorLeaveBoard());\n    }\n\n    squareContainsMark(squareNumber) {\n      return !!this.marks.find(mark => mark.SquareNumber == squareNumber);\n    }\n\n    isWhite(squareNumber) {\n      var _a, _b;\n\n      return ((_b = (_a = this.marks) === null || _a === void 0 ? void 0 : _a.find(mark => (mark === null || mark === void 0 ? void 0 : mark.SquareNumber) == squareNumber)) === null || _b === void 0 ? void 0 : _b.Color) === Color.White;\n    }\n\n    isPlayerTurn() {\n      return true;\n    }\n\n    getReferenceMark() {\n      if (referenceMarkOnBoard === undefined || referenceMarkOnBoard === null) referenceMarkOnBoard = document.getElementsByClassName('mark')[1];\n      return referenceMarkOnBoard;\n    }\n\n    getMarkAttachedToCursor() {\n      if (markAttachedToCursor === undefined || markAttachedToCursor === null) markAttachedToCursor = document.getElementsByClassName('mark_moving_with_cursor')[0];\n      return markAttachedToCursor;\n    }\n\n    moveMarkToCursor(mouseX, mouseY) {\n      const mark = this.getMarkAttachedToCursor();\n      const markWidth = mark.clientWidth;\n      const markHeight = mark.clientHeight;\n      const widthOffset = mouseY - markWidth / 2;\n      const heightOffset = mouseX - markHeight / 2;\n      mark.style.top = widthOffset + 'px';\n      mark.style.left = heightOffset + 'px';\n      if (mark.clientWidth === 0) this.resizeCursorMark();\n    }\n\n    resizeCursorMark() {\n      const mark = this.getMarkAttachedToCursor();\n      const referenceMark = this.getReferenceMark();\n      mark.style.width = referenceMark.clientWidth + 'px';\n      mark.style.height = referenceMark.clientHeight + 'px';\n    }\n\n    cursorEnterBoard() {\n      const mark = this.getMarkAttachedToCursor();\n      if (this.isPlayerTurn()) mark.style.visibility = 'visible';\n    }\n\n    cursorLeaveBoard() {\n      const mark = this.getMarkAttachedToCursor();\n      mark.style.visibility = 'hidden';\n    }\n\n  }\n\n  BoardComponent.ɵfac = function BoardComponent_Factory(t) {\n    return new (t || BoardComponent)();\n  };\n\n  BoardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BoardComponent,\n    selectors: [[\"app-board\"]],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"board\", \"board_players_turn\"], [1, \"mark_moving_with_cursor\", \"mark\"], [\"class\", \"square\", 4, \"ngFor\", \"ngForOf\"], [1, \"square\"], [3, \"ngClass\", 4, \"ngIf\"], [3, \"ngClass\"]],\n    template: function BoardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"div\", 1);\n        i0.ɵɵtemplate(2, BoardComponent_div_2_Template, 2, 1, \"div\", 2);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.squareNumbers);\n      }\n    },\n    directives: [i1.NgForOf, i1.NgIf, i1.NgClass],\n    styles: [\".board[_ngcontent-%COMP%]{display:grid;overflow:hidden;grid-template-columns:repeat(8,1fr);grid-column-gap:5px;grid-row-gap:5px;max-width:800px;min-width:400px;background-color:#000}.square[_ngcontent-%COMP%]{background-color:#11823b;aspect-ratio:1/1;display:flex;align-items:center;justify-content:center}.square[_ngcontent-%COMP%]:hover{background-color:#004d25}.mark[_ngcontent-%COMP%]{border-radius:50%;width:80%;height:80%}.white[_ngcontent-%COMP%]{background-color:#fff}.black[_ngcontent-%COMP%]{background-color:#000}.board_players_turn[_ngcontent-%COMP%]{cursor:pointer}.mark_moving_with_cursor[_ngcontent-%COMP%]{width:0px;height:0px;pointer-events:none;position:absolute;background-color:red}\"]\n  });\n  return BoardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}